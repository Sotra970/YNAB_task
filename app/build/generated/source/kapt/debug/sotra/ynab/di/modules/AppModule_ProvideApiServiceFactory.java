// Generated by Dagger (https://google.github.io/dagger).
package sotra.ynab.di.modules;

import dagger.internal.Factory;
import dagger.internal.Preconditions;
import sotra.ynab.api.ApiService;

public final class AppModule_ProvideApiServiceFactory implements Factory<ApiService> {
  private final AppModule module;

  public AppModule_ProvideApiServiceFactory(AppModule module) {
    this.module = module;
  }

  @Override
  public ApiService get() {
    return provideInstance(module);
  }

  public static ApiService provideInstance(AppModule module) {
    return proxyProvideApiService(module);
  }

  public static AppModule_ProvideApiServiceFactory create(AppModule module) {
    return new AppModule_ProvideApiServiceFactory(module);
  }

  public static ApiService proxyProvideApiService(AppModule instance) {
    return Preconditions.checkNotNull(
        instance.provideApiService(), "Cannot return null from a non-@Nullable @Provides method");
  }
}
