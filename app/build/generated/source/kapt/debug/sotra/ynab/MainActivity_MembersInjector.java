// Generated by Dagger (https://google.github.io/dagger).
package sotra.ynab;

import androidx.fragment.app.Fragment;
import dagger.MembersInjector;
import dagger.android.DispatchingAndroidInjector;
import javax.inject.Provider;
import sotra.ynab.repo.NetworkRepo;

public final class MainActivity_MembersInjector implements MembersInjector<MainActivity> {
  private final Provider<DispatchingAndroidInjector<Fragment>> dispatchingAndroidInjectorProvider;

  private final Provider<NetworkRepo> networkProvider;

  public MainActivity_MembersInjector(
      Provider<DispatchingAndroidInjector<Fragment>> dispatchingAndroidInjectorProvider,
      Provider<NetworkRepo> networkProvider) {
    this.dispatchingAndroidInjectorProvider = dispatchingAndroidInjectorProvider;
    this.networkProvider = networkProvider;
  }

  public static MembersInjector<MainActivity> create(
      Provider<DispatchingAndroidInjector<Fragment>> dispatchingAndroidInjectorProvider,
      Provider<NetworkRepo> networkProvider) {
    return new MainActivity_MembersInjector(dispatchingAndroidInjectorProvider, networkProvider);
  }

  @Override
  public void injectMembers(MainActivity instance) {
    injectDispatchingAndroidInjector(instance, dispatchingAndroidInjectorProvider.get());
    injectNetwork(instance, networkProvider.get());
  }

  public static void injectDispatchingAndroidInjector(
      MainActivity instance, DispatchingAndroidInjector<Fragment> dispatchingAndroidInjector) {
    instance.dispatchingAndroidInjector = dispatchingAndroidInjector;
  }

  public static void injectNetwork(MainActivity instance, NetworkRepo network) {
    instance.network = network;
  }
}
